Guidelines for LLMs (and Humans) When Contributing
================

Process
-------
When given a task:
1. First, STOP and check if there is a solution without code changes!
   - If rebuilding the Docker image could solve the issue, suggest that first.
   - If purging a cache or restarting a servicve could solve the issue, suggest that first.
   - If a network issue (like no internet connection) could be the problem, suggest the user check that first.
   Do NOT change code until you have confirmed it is not a simple issue like above!

2. If coding is called for, start with tests. You may either modify existing tests to include your new test case, or create new tests.
3. Once the tests are updated and failing (because you haven't written the code yet), then write the code.
4. Only add/update code nessesary to complete the specific task given.
4. Once tests are passing, refactor to DRY out, make more legible, and better follow these guidelines.
5. Any time you add or remove any file, make sure to update the tree.txt file.


Refactoring
-----------
When refactoring code:
1. Type hints should be used whenever possible.
2. Don't catch bare exceptions - if you don't know what you are catching, let it rise.
3. Make sure all code has appropriate logging statements.
4. Don't use f strings in logging, use the % operator.


Structure
---------
Business logic for the internals of stuart belong in `stuart/__init__.py`.

Module/File Guidelines
------------

Individual modules and files will have guidelines specific to them. Respect these guidelines.

